//FlySatellite.h

#ifndef FlySatellite_h
#define FlySatellite_h

#include "Planet.h"
#include "Satellite.h"
#include "Atmosphere.h"
#include <vector>

class FlySatellite {
public:
  FlySatellite(Planet p, Satellite s, Atmosphere atm) {
    p_ = p;
    s_ = s;
    atm_ = atm;
  }

  // Setters - Metodi di aggiornamento
  virtual void setP(Planet p) {p_ = p;}
  virtual void setS(Satellite s) {s_ = s;}
  virtual void setAtm(Atmosphere atm) {atm_= atm;}
  
  // Getters - Metodi di accesso
  virtual Planet P() const { return p_; }
  virtual Satellite S() const {return s_;}
  virtual Atmosphere Atm() const {return atm_;}

  virtual vector<Satellite> simulation(double tmin, double tmax) const = 0;

private:
  Planet p_;
  Satellite s_;
  Atmosphere atm_;
#endif
